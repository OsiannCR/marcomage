/*********************************************
 * MArcomage CSS stylesheet - general styles *
 *********************************************/

html {
  font-family: $font-family-times;
  margin: 0;
  padding: 0;
}

hr {
  border: thin solid;
  margin: 0;
  padding: 0;
}

button,
input {
  border: 2px outset $black;
  border-radius: 6px;
  color: $black;
  font-family: $font-family-arial;
  font-size: small;
  font-weight: normal;
  padding: 0.4ex 1.2ex 0.4ex 1.2ex;
  vertical-align: middle;
}

// hyperlink button
a.button {
  border: 2px outset $black;
  border-radius: 6px;
  color: $black;
  display: inline-block;
  font-family: $font-family-arial;
  font-size: small;
  font-weight: normal;
  padding: 0.4ex 1.2ex 0.4ex 1.2ex;
  text-decoration: none;
  vertical-align: middle;
}

// default color for hyperlink button
a.button:link,
a.button:visited {
  color: $black;
}

// image links
a.image-link,
a.image-link:link,
a.image-link:visited {
  text-decoration: none;
}

// player profile link
a.profile,
a.profile:link,
a.profile:visited {
  color: inherit;
  text-decoration: none;
}

// disabled hyperlink button
.disabled {
  border: 2px outset $black;
  border-radius: 6px;
  color: $gray;
  display: inline-block;
  font-family: $font-family-arial;
  font-size: large;
  font-weight: normal;
  padding: 0.2ex 0.6ex 0.2ex 0.6ex;
  vertical-align: middle;
}

.button-icon,
a.button-icon {
  font-size: large;
  padding: 0.2ex 0.6ex 0.2ex 0.6ex;
}

.button-navigation {
  font-size: medium;
}

// set default properties (do not rely on browser defaults)
body {
  background-color: $transparent-full;
  color: inherit;
  font-family: $font-family-times;
  font-size: medium;
  line-height: normal;
}

// override defaults
body,
h5,
p {
  padding: 0;
  margin: 0;
}

h1 {
  color: $red;
  font-family: $font-family-arial;
  text-align: center;
}

h2,
h3 {
  font-family: $font-family-arial;
  font-size: large;
  text-align: center;
}

h4,
h5 {
  font-family: $font-family-arial;
  font-size: medium;
  line-height: normal;
}

ul {
  margin-left: 2ex;
  padding-left: 0;
}

select {
  background-color: $light-blue;
  border: thin solid $black;
  color: $black;
  font-family: $font-family-arial;
  font-size: small;
  font-weight: normal;
  padding: 0.3ex 0.5ex 0.3ex 0.5ex;
  vertical-align: middle;
}

th {
  margin: 0;
  padding: 0;
}

// text area layout
textarea {
  border: 2px inset $black;
  border-radius: 6px;
  color: $black;
  font-family: $font-family-monospace;
  font-weight: normal;
  margin-top: 1ex;
  width: 100%;
}

// table cell spacing
table {
  border-collapse: separate;
  border-spacing: 0;
}

// table cell padding
table > tbody > tr > td,
table > tbody > tr > th {
  padding: 0;
}

// default table header styles
table > tbody > tr > th {
  font-family: $font-family-arial;
  text-align: center;
}

// centered table
table.centered {
  margin-left: auto;
  margin-right: auto;
}

// centered row
div.centered,
tr.centered > td {
  text-align: center;
}

// centered row
td.centered,
tr.centered > td > p.flag {
  margin-left: auto;
  margin-right: auto;
}

// table align top
td.align-top,
tr.align-top {
  vertical-align: top;
}

// table align bottom
.align-bottom {
  vertical-align: bottom;
}

// table align right
.align-right > div,
.align-right > table {
  margin-left: auto
}

// information message layout
p.information-line {
  font-family: $font-family-arial;
  line-height: 20px;
  text-align: center;
}

// when no information is displayed, display blank line
p.blank-line {
  height: 20px;
  margin: 0;
}

// clear both floats
div.clear-floats {
  clear: both;
}

// input text fields
input[type="password"],
input[type="text"] {
  border-style: inset;
}

input[type="file"] {
  display: inline-block;
}

// avatar picture
img.avatar {
  background-color: $black;
  border: thin solid $white-shade;
  margin-bottom: 0.2ex;
  margin-right: 0.5ex;
  vertical-align: middle;
}

.bb-code-buttons {
  margin-top: 1ex;
}

// checkbox layout
input[type="checkbox"] {
  font-size: large;
  margin: 3px;
}

input.table-checkbox {
  border: thin solid;
  padding: 0.7ex;
}

fieldset {
  border: 2px groove threedface;
  display: block;
  padding: 1ex 2ex 2ex 2ex;
}

legend {
  border-color: initial;
  border-image: initial;
  border-style: none;
  border-width: initial;
  color: inherit;
  display: block;
  font-size: medium;
  margin: 0;
  padding: 0 0.5ex 0 0.5ex;
  width: auto;
}

// card and keyword code
div.code > pre {
  font-family: $font-family-monospace;
  color: $black;
}

// filters
.filters {
  text-align: center;
}

// set distance between filter buttons
.filters * + button,
.filters * + .button,
.filters * + .disabled {
  margin-left: 0.5ex;
}

// highlight filter when active
.filter-active {
  background-color: $green;
}

// selected button
a.pushed,
a.button:active,
button.pushed {
  border-style: inset;
}

// icon image
img.icon {
  margin-left: 0.5ex;
  vertical-align: middle;
}

// quote text layout
blockquote {
  border: none;
  font-size: medium;
  margin-bottom: 1ex;
  margin-left: 2ex;
  margin-top: 1ex;
  padding: 0;
}

blockquote > div {
  background: url('/img/quote.gif') no-repeat 10px 10px;
  border-radius: 6px;
  font-size: small;
  padding: 1.8em 0.8em 0.8em 0.8em;
}

// author name layout in quote text
blockquote > div > cite {
  display: block;
  font-style: normal;
  margin-left: 2.5ex;
}

.container .top-level {
  margin-left: 0.5ex;
  margin-right: 0.5ex;
  margin-top: 1ex;
}

// newly unlocked cards during level up message
.unlocked-cards {
  text-align: center;
}

.unlocked-cards > div {
  display: inline-block;
  vertical-align: top;
}

.challenge-deck {
  background-color: $green;
}

.icon-player-activity {
  border-radius: 8px;
  display: inline-block;
  height: 12px;
  vertical-align: middle;
  width: 12px;
}

.icon-player-activity.online {
  @include circular-gradient($lime);
}

.icon-player-activity.offline {
  @include circular-gradient($red);
}

.icon-player-activity.inactive {
  @include circular-gradient($brown);
}

.icon-player-activity.dead {
  @include circular-gradient($brown);
}

// fade table row hover effect
.table-row {
  transition: background-color 400ms;
}

.table-row p {
  transition: color 400ms;
}

// navigation bar buttons highlight
.nav-buttons button,
.nav-buttons .button {
  transition: background-color 400ms;
}

// Bootstrap grid default spacing
.container,
.container .row > div[class*='col-'] {
  padding-left: 0;
  padding-right: 0;
}

.container .row {
  margin-left: 0;
  margin-right: 0;
}

// responsive table
div.responsive-table {
  margin-bottom: 1ex;
  margin-left: auto;
  margin-right: auto;
  padding-bottom: 0.5ex;
}

// responsive table header
div.responsive-table > div.row:first-child {
  font-family: $font-family-arial;
  text-align: center;
}

// breakpoint specific layout
@media (max-width: $screen-xs-max) {
  // separate list items visually
  div.responsive-table.table-sm > div.row + div.row {
    border-top: thin solid $transparent-shadow;
  }

  // hide responsive table header
  div.responsive-table.table-sm > div.row:first-child > div[class*='col-'] > * {
    display: none;
  }

  // show only sortable column names
  div.responsive-table.table-sm > div.row:first-child > div[class*='col-'] > p.sortable {
    display: block;
  }
}

// breakpoint specific layout
@media (max-width: $screen-sm-max) {
  // separate list items visually
  div.responsive-table.table-md > div.row + div.row {
    border-top: thin solid $transparent-shadow;
  }

  // hide responsive table header
  div.responsive-table.table-md > div.row:first-child > div[class*='col-'] > * {
    display: none;
  }

  // show only sortable column names
  div.responsive-table.table-md > div.row:first-child > div[class*='col-'] > p.sortable {
    display: block;
  }
}

// cell spacing
div.responsive-table > div > div > p {
  margin: 1ex;
}

// clickable row
div.responsive-table .row.details {
  cursor: pointer;
}

// modal screen center display
div[role="dialog"].modal .vertical-alignment-helper {
  display: table;
  height: 100%;
  pointer-events: none;
  width: 100%;
}

div[role="dialog"].modal .vertical-align-center {
  display: table-cell;
  pointer-events: none;
  vertical-align: middle;
}

div[role="dialog"].modal .modal-content {
  height: inherit;
  margin: 0 auto;
  pointer-events: all;
  width: inherit;
}

// general modal layout
div[role="dialog"].modal .modal-dialog {
  color: $black;
  text-align: center;
}

div[role="dialog"].modal .modal-dialog .modal-title {
  font-family: $font-family-arial;
  text-align: left;
}

div[role="dialog"].modal .modal-dialog .modal-footer {
  text-align: center;
}

#error-message .modal-dialog .modal-body p {
  color: $red;
}

div[role="dialog"].modal button[name="close-modal"] {
  background-color: $transparent-full;
  border-style: none;
  float: right;
}

@media only print {
  .deck-options,
  #menu-bar {
    display: none;
  }

  .container {
    width: 100%;
  }
}
